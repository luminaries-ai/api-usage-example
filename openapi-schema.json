{"openapi":"3.0.0","info":{"title":"Luminaries API","description":"\n## Overview\nThis is the alpha release of the Luminaries AI API. The API is subject to change and may have sparse documentation in places.\nAny changes will be made with notice and coordination from the Luminaries team but may be made on faster timelines than is typical for a production API.\n\n## Authentication\nThe API is authenticated via Basic auth where a Client ID + Secret Key pair in the format \"[CLIENT ID]:[SECRET KEY]\" is base64 encoded in the authorization header. If you do not already have a pair you can get started by sending a request to [help@luminaries.ai](mailto:help@luminaries.ai).\n<SecurityDefinitions />\n    ","version":"0.0.1","contact":{"email":"help@luminaries.ai"},"x-logo":{"url":"https://www.luminaries.ai/logo.svg","altText":"Luminaries AI Logo"}},"tags":[{"name":"Conversations","description":"A conversation represents a thread between a person and a bot. Message history is automatically tracked for so only the new message has to be provided for response"}],"servers":[{"url":"https://api.luminaries.ai","description":"prod"}],"components":{"securitySchemes":{"apiKey":{"name":"Authorization","in":"header","type":"apiKey"}},"schemas":{"ContentExtraction":{"type":"object","properties":{"contentExtractionJobId":{"type":["string","null"]},"contentGroupId":{"type":"string"},"contentId":{"type":"string"},"createdAt":{"type":"string"},"embeddingText":{"type":"string"},"id":{"type":"string"},"metadata":{"type":"object","nullable":true},"parentId":{"type":"string","nullable":true},"recencyDate":{"type":"string","nullable":true},"type":{"type":"string","nullable":true},"updatedAt":{"type":"string","nullable":true}},"required":["contentExtractionJobId","contentGroupId","contentId","createdAt","embeddingText","id","metadata","parentId","recencyDate","type"]},"CreateContentExtractionInput":{"type":"object","properties":{"contentExtractionJobId":{"type":"string"},"contentGroupId":{"type":"string"},"contentId":{"type":"string"},"embeddingText":{"type":"string"},"metadata":{"type":"object","nullable":true},"parentId":{"type":"string","nullable":true},"recencyDate":{"type":"string","nullable":true},"type":{"type":"string","nullable":true}},"required":["contentExtractionJobId","contentGroupId","contentId","embeddingText","metadata","parentId","recencyDate","type"]},"ContentExtractionJob":{"type":"object","properties":{"id":{"type":"string"},"organizationId":{"type":"string"},"contentId":{"type":"string"},"createdAt":{"type":"string"},"updatedAt":{"type":"string"},"status":{"type":"string","enum":["pending","processing","complete","failed","pending","processing","done","failed"]}},"required":["id","organizationId","contentId","createdAt","updatedAt","status","contentId","createdAt","id","status","updatedAt","organizationId"]},"CreateContentExtractionJob":{"type":"object","properties":{"contentId":{"type":"string"}},"required":["contentId"]},"UpdateExtractionJob":{"type":"object","properties":{"status":{"type":"string"}},"required":["status"]},"ContentGroup":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"organizationId":{"type":"string"},"createdAt":{"type":"string"},"updatedAt":{"type":"string"}},"required":["id","name","organizationId","createdAt","updatedAt"]},"ContentGroupCreate":{"type":"object","properties":{"name":{"type":"string"}},"required":["name"]},"Content":{"type":"object","properties":{"bucket":{"type":"string"},"path":{"type":"string"},"type":{"oneOf":[{"type":"string"},{"type":"string","enum":["video","audio","deepgram-transcript"]}]},"name":{"type":"string"},"contentGroupId":{"type":"string"},"createdAt":{"type":"string"},"contentType":{"type":"string"},"description":{"type":"string"},"organizationId":{"type":"string"},"id":{"type":"string"},"recencyDate":{"type":"string"},"updatedAt":{"type":"string","nullable":true}},"required":["bucket","path","type","name","contentGroupId","createdAt","contentType","description","organizationId","id","recencyDate","updatedAt"]},"ContentCreate":{"type":"object","properties":{"bucket":{"type":"string"},"path":{"type":"string"},"type":{"oneOf":[{"type":"string"},{"type":"string","enum":["video","audio","deepgram-transcript"]}]},"name":{"type":"string"},"contentGroupId":{"type":"string"},"contentType":{"type":"string"},"description":{"type":"string"},"organizationId":{"type":"string"},"recencyDate":{"type":"string","nullable":true},"updatedAt":{"type":"string","nullable":true}},"required":["bucket","path","type","name","contentGroupId","contentType","description","organizationId","recencyDate","updatedAt"]},"UpdateContent":{"type":"object","properties":{"bucket":{"type":"string"},"path":{"type":"string"},"name":{"type":"string"},"description":{"type":"string"},"recencyDate":{"type":"string"}}},"Conversation":{"type":"object","properties":{"id":{"type":"string"},"conversationEngineVersion":{"type":"string"},"createdAt":{"type":"string"},"updatedAt":{"type":"string"},"userId":{"type":"string"},"organizationId":{"type":"string"},"hidden":{"type":"boolean"},"summary":{"type":"string"},"type":{"type":"string"},"uniqueKey":{"type":"string"}},"required":["id","conversationEngineVersion","createdAt","updatedAt","userId","organizationId","hidden","summary","type","uniqueKey"]},"PersonGroupMembership":{"type":"object","properties":{"id":{"type":"string"},"personId":{"type":"string"},"personGroupId":{"type":"string"},"createdAt":{"type":"string"},"updatedAt":{"type":"string"}},"required":["id","personId","personGroupId","createdAt","updatedAt"]},"PersonGroup":{"type":"object","properties":{"id":{"type":"string"},"createdAt":{"type":"string"},"updatedAt":{"type":"string"},"name":{"type":"string"},"description":{"type":"string"},"organizationId":{"type":"string"}},"required":["id","createdAt","updatedAt","name","description","organizationId"]},"CreatePersonGroupInput":{"type":"object","properties":{"name":{"type":"string"}},"required":["name"]},"PersonChannel":{"type":"object","properties":{"id":{"type":"string"},"personId":{"type":"string"},"channelId":{"type":"string"},"channelType":{"type":"string"}},"required":["id","personId","channelId","channelType"]},"Person":{"type":"object","properties":{"id":{"type":"string"},"createdAt":{"type":"string"},"updatedAt":{"type":"string"},"givenName":{"type":"string"},"familyName":{"type":"string"},"externalId":{"type":"string"},"organizationId":{"type":"string"}},"required":["id","createdAt","updatedAt","givenName","familyName","externalId","organizationId"]},"CreatePersonInput":{"type":"object","properties":{"givenName":{"type":"string"},"familyName":{"type":"string"},"externalId":{"type":"string"}},"required":["givenName","familyName","externalId"]},"PersonRecord":{"type":"object","properties":{"data":{"type":"object","additionalProperties":{}},"id":{"type":"string"},"createdAt":{"type":"string"},"updatedAt":{"type":"string"},"personId":{"type":"string"},"organizationId":{"type":"string"},"personRecordSchemaId":{"type":"string"}},"required":["data","id","createdAt","updatedAt","personId","organizationId","personRecordSchemaId"]},"PersonRecordSchema":{"type":"object","properties":{"createdAt":{"type":"string"},"id":{"type":"string"},"description":{"type":"string"},"name":{"type":"string"},"organizationId":{"type":"string"},"schema":{"type":"object","properties":{"schema":{"type":"object","properties":{"type":{"type":"string","enum":["object"]},"fields":{"type":"object","additionalProperties":{"type":"object","properties":{"type":{"type":"string","enum":["field"]},"fieldType":{"oneOf":[{"type":"string","enum":["string"]},{"type":"string","enum":["number"]},{"type":"string","enum":["date"]},{"type":"string","enum":["boolean"]},{"type":"array","items":{"type":"string"}}]},"description":{"type":"string"},"optional":{"type":"boolean"}},"required":["type","fieldType"]}},"description":{"type":"string"},"optional":{"type":"boolean"}},"required":["type","fields"]},"unique_id":{"type":"array","items":{"type":"string"}}},"required":["schema","unique_id"]}},"required":["createdAt","id","description","name","organizationId","schema"]},"Organization":{"type":"object","properties":{"createdAt":{"type":"string"},"id":{"type":"string"},"name":{"type":"string"},"updatedAt":{"type":"string"},"logoUrl":{"type":"string"}},"required":["createdAt","id","name","updatedAt","logoUrl"]},"Message":{"type":"object","properties":{"id":{"format":"uuid","description":"The unique identifier for the message","type":"string"},"content":{"description":"The message content","type":"string"},"userId":{"type":"string"},"userType":{"enum":["person","bot"],"type":"string"},"organizationId":{"type":"string"},"createdAt":{"anyOf":[{"format":"date-time","type":"string"},{"type":"null"}]},"respondedAt":{"anyOf":[{"format":"date-time","type":"string"},{"type":"null"}]},"status":{"enum":["completed","failed","streaming","pending","in_progress"],"type":"string"}},"required":["id","content","userId","userType","organizationId","createdAt","respondedAt","status"]},"CreateMessageInput":{"type":"object","properties":{"message":{"title":"Message","description":"The message content","type":"string"},"context":{"title":"Context","description":"A key value map of context to be used for the message. This can be helpful for signaling to the bot specific things about the interaction with the user. Maybe the user is on a particular page of a site, interacting with specific content or in the middle of a particular action within your system","type":"object","patternProperties":{"^(.*)$":{"anyOf":[{"type":"string"},{"type":"number"},{"type":"boolean"}]}}},"response":{"enum":["async","skip","sync"],"default":"async","title":"Response Configuration","description":"By default responses are generated asynchronously and the response can be streamed via the /messages/{id}/stream endpoint. If you want to skip the response, you can set this to 'skip'. If you want the response to be generated synchronously, you can set this to 'sync'","type":"string"}},"required":["message","context"]}},"requestBodies":{"AddPeopleToGroupRequest":{"content":{"application/json":{"schema":{"type":"object","properties":{"peopleIds":{"type":"array","items":{"type":"string"}}}}}}}},"responses":{"GetPersonGroupsResponse":{"description":"Successfully created a new person group","content":{"application/json":{"schema":{"type":"object","required":["results"],"properties":{"results":{"type":"array","items":{"type":"object","required":["membership","group"],"properties":{"membership":{"$ref":"#/components/schemas/PersonGroupMembership"},"group":{"$ref":"#/components/schemas/PersonGroup"}}}},"continuationToken":{"type":"string"}}}}}}}},"paths":{"/api/v2/content-groups/{groupId}/content/{contentId}/jobs/{jobId}/retry":{"parameters":[{"name":"groupId","in":"path","required":true,"schema":{"type":"string"}},{"name":"contentId","in":"path","required":true,"schema":{"type":"string"}},{"name":"jobId","in":"path","required":true,"schema":{"type":"string"}}]},"/api/v2/content-groups/{groupId}/content/{contentId}/extractions":{"parameters":[{"name":"groupId","in":"path","required":true,"schema":{"type":"string"}},{"name":"contentId","in":"path","required":true,"schema":{"type":"string"}}]},"/api/v2/content-groups/{groupId}/content/{contentId}/jobs":{"parameters":[{"name":"groupId","in":"path","required":true,"schema":{"type":"string"}},{"name":"contentId","in":"path","required":true,"schema":{"type":"string"}}]},"/api/v2/content-groups/{groupId}/content/{contentId}/jobs/{jobId}":{"parameters":[{"name":"groupId","in":"path","required":true,"schema":{"type":"string"}},{"name":"contentId","in":"path","required":true,"schema":{"type":"string"}},{"name":"jobId","in":"path","required":true,"schema":{"type":"string"}}]},"/api/v2/content-groups/{groupId}/search":{"parameters":[{"name":"groupId","in":"path","required":true,"schema":{"type":"string"}}]},"/api/v2/content-groups":{},"/api/v2/content-groups/{groupId}/content":{"parameters":[{"name":"groupId","in":"path","required":true,"schema":{"type":"string"}}]},"/api/v2/content-groups/{groupId}/content/{contentId}/search":{"parameters":[{"name":"groupId","in":"path","required":true,"schema":{"type":"string"}},{"name":"contentId","in":"path","required":true,"schema":{"type":"string"}}]},"/api/v2/content-groups/{groupId}/content/{contentId}":{"parameters":[{"name":"groupId","in":"path","required":true,"schema":{"type":"string"}},{"name":"contentId","in":"path","required":true,"schema":{"type":"string"}}]},"/api/v2/conversations/{conversationId}/messages/{messageId}":{"get":{"tags":["Conversations"],"operationId":"getMessage","description":"Get a single message","responses":{"200":{"description":"test","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Message"}}}}},"security":[{"apiKey":[]}]},"parameters":[{"name":"conversationId","in":"path","required":true,"schema":{"type":"string"}},{"name":"messageId","in":"path","required":true,"schema":{"type":"string"}}]},"/api/v2/directory/groups/{groupId}/remove-people":{"parameters":[{"name":"groupId","in":"path","required":true,"schema":{"type":"string"}}]},"/api/v2/conversations/{conversationId}":{"parameters":[{"name":"conversationId","in":"path","required":true,"schema":{"type":"string"}}]},"/api/v2/directory/groups/{groupId}/add-people":{"parameters":[{"name":"groupId","in":"path","required":true,"schema":{"type":"string"}}]},"/api/v2/directory/groups/{groupId}":{"parameters":[{"name":"groupId","in":"path","required":true,"schema":{"type":"string"}}]},"/api/v2/directory/groups":{},"/api/v2/directory/groups/{groupId}/people":{"parameters":[{"name":"groupId","in":"path","required":true,"schema":{"type":"string"}}]},"/api/v2/directory/people/{personId}/channels":{"parameters":[{"name":"personId","in":"path","required":true,"schema":{"type":"string"}}]},"/api/v2/directory/people/{personId}":{"parameters":[{"name":"personId","in":"path","required":true,"schema":{"type":"string"}}]},"/api/v2/directory/people/{personId}/conversations":{"parameters":[{"name":"personId","in":"path","required":true,"schema":{"type":"string"}}]},"/api/v2/directory/people":{},"/api/v2/directory/record-schemas/{schemaId}/records":{"parameters":[{"name":"schemaId","in":"path","required":true,"schema":{"type":"string"}}]},"/api/v2/directory/records/{recordId}":{"parameters":[{"name":"recordId","in":"path","required":true,"schema":{"type":"string"}}]},"/api/v2/directory/people/{personId}/records":{"parameters":[{"name":"personId","in":"path","required":true,"schema":{"type":"string"}}]},"/api/v2/directory/record-schemas/{schemaId}":{"parameters":[{"name":"schemaId","in":"path","required":true,"schema":{"type":"string"}}]},"/api/v2/directory/people/{personId}/groups":{"parameters":[{"name":"personId","in":"path","required":true,"schema":{"type":"string"}}]},"/api/v2/directory/record-schemas":{},"/api/v2/organizations":{},"/api/v2/directory/search":{},"/api/v2/conversations/{conversationId}/messages":{"post":{"tags":["Conversations"],"operationId":"createMessage","description":"Create a message in a conversation","requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateMessageInput"}}}},"responses":{"200":{"description":"The newly created message and it's corresponding response message unless skipped","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Message"}}}}}},"security":[{"apiKey":[]}]},"get":{"tags":["Conversations"],"parameters":[{"name":"continuationToken","description":"The continuationToken is a token that allows you to continue fetching results from a paginated API. If the continuation token is not provided or is empty, the API will return the first page of results.","in":"query","schema":{"type":"string"},"required":false},{"name":"limit","description":"The number of results that the API should return.","in":"query","schema":{"type":"number","default":25,"maximum":100},"required":false}],"operationId":"listConversationMessages","description":"Paginate messages in a conversation. Ordered in reverse chronological order.","responses":{"200":{"description":"test","content":{"application/json":{"schema":{"type":"object","required":["results"],"properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/Message"}},"continuationToken":{"type":"string"}}}}}}},"security":[{"apiKey":[]}]},"parameters":[{"name":"conversationId","in":"path","required":true,"schema":{"type":"string"}}]},"/api/v2/conversations":{"get":{"description":"Get a conversation","tags":["Conversations"],"parameters":[{"name":"continuationToken","description":"The continuationToken is a token that allows you to continue fetching results from a paginated API. If the continuation token is not provided or is empty, the API will return the first page of results.","in":"query","schema":{"type":"string"},"required":false},{"name":"limit","description":"The number of results that the API should return.","in":"query","schema":{"type":"number","default":25,"maximum":100},"required":false}],"operationId":"listConversations","responses":{"200":{"description":"List the conversations for your organization","content":{"application/json":{"schema":{"type":"object","required":["results"],"properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/Conversation"}},"continuationToken":{"type":"string"}}}}}}},"security":[{"apiKey":[]}]},"post":{"tags":["Conversations"],"operationId":"createConversation","description":"Create a conversation","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"description":"A name for the conversation","default":"New Conversation","type":"string"},"personId":{"title":"Person ID","description":"The Luminaries AI Person ID","type":"string"},"person":{"title":"Person Details","description":"The details of the person","type":"object","properties":{"externalId":{"description":"Luminaries AI will use your organizations external identifier for deduplication. If none is provided, it will be left empty","title":"Person ID","type":"string"},"givenName":{"description":"The given name of the person","title":"Given Name","type":"string"},"familyName":{"description":"The family name of the person","title":"Family Name","type":"string"}}},"botId":{"description":"The id of the bot that should respond","type":"string"},"uniqueId":{"description":"If you have an external unique id for the conversation","type":"string"}},"required":["botId"]}}}},"responses":{"200":{"description":"Conversation created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Conversation"}}}}},"security":[{"apiKey":[]}]}}}}